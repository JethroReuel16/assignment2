SELECT t1.contest_id, t1.hacker_id, t1.name, t2.total_submissions, t2.total_accepted_submissions, t1.total_views, t1.total_unique_views FROM (SELECT c.contest_id, c.hacker_id, c.name, COALESCE(SUM(vs.total_views), 0) AS total_views, COALESCE(SUM(vs.total_unique_views), 0) AS total_unique_views FROM Contests c LEFT JOIN Colleges col ON c.contest_id = col.contest_id LEFT JOIN Challenges ch ON col.college_id = ch.college_id LEFT JOIN View_Stats vs ON ch.challenge_id = vs.challenge_id GROUP BY c.contest_id, c.hacker_id, c.name HAVING SUM(vs.total_views) > 0 OR SUM(vs.total_unique_views) > 0 ORDER BY c.contest_id) as t1  LEFT JOIN

(SELECT c.contest_id, c.hacker_id, c.name, COALESCE(SUM(ss.total_submissions), 0) AS total_submissions, COALESCE(SUM(ss.total_accepted_submissions), 0) AS total_accepted_submissions FROM Contests c LEFT JOIN Colleges col ON c.contest_id = col.contest_id LEFT JOIN Challenges ch ON col.college_id = ch.college_id LEFT JOIN Submission_Stats ss ON ch.challenge_id = ss.challenge_id GROUP BY c.contest_id, c.hacker_id, c.name HAVING SUM(ss.total_submissions) > 0 OR SUM(ss.total_accepted_submissions) > 0 ORDER BY c.contest_id) as t2

ON t1.contest_id = t2.contest_id;
